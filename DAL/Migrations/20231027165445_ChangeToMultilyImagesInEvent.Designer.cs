// <auto-generated />
using System;
using DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace _2DAL.Migrations
{
    [DbContext(typeof(ModelContext))]
    [Migration("20231027165445_ChangeToMultilyImagesInEvent")]
    partial class ChangeToMultilyImagesInEvent
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Model.Event", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("address");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("eventdate");

                    b.Property<TimeSpan>("EventDuration")
                        .HasColumnType("interval")
                        .HasColumnName("eventduration");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("pk_eventset");

                    b.ToTable("eventset", (string)null);
                });

            modelBuilder.Entity("Model.Image", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("EventId")
                        .HasColumnType("bigint");

                    b.Property<long?>("Event_Id")
                        .HasColumnType("bigint")
                        .HasColumnName("event_id");

                    b.Property<bool>("IsMain")
                        .HasColumnType("boolean")
                        .HasColumnName("ismain");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_imageset");

                    b.HasIndex("EventId");

                    b.HasIndex("Event_Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("imageset", (string)null);
                });

            modelBuilder.Entity("Model.Image", b =>
                {
                    b.HasOne("Model.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventId");

                    b.HasOne("Model.Event", null)
                        .WithMany("Images")
                        .HasForeignKey("Event_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_event_image");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("Model.Event", b =>
                {
                    b.Navigation("Images");
                });
#pragma warning restore 612, 618
        }
    }
}
